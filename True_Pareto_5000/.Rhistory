#  "Random"
#,
# "Optimal_Random"
)
#problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
problems<- c("DTLZ6")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 5:5){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
#problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 5:5){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
#problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 5:5){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
#problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 5:5){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
#problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 3:3){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
#problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 3:3){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
#problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 3:3){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
library(ecr)
library(MOEADr)
library(ggplot2)
igdall=NULL
strategy <- c("Offline") #,"Online")
sampling <- c(
"LHS"
#,
#  "Random"
#,
# "Optimal_Random"
)
problems<- c("DTLZ2","DTLZ4","DTLZ5","DTLZ6","DTLZ7")
#problems<- c("DTLZ7")
author <- c("AM_109_Runs_2","Final_109_m3","Final_109_m4")
#,"Method_5","Method_6"); # "Initial_Sample"
#m=2
directory<-c("E:/Works/MATLAB/Data_driven_surrogate_code/")
for(sa in sampling){
for(st in strategy){
for(m in 3:3){
for (i in problems){
for(au in author){
igdtemp=NULL
for(j in 1:21){
print(sa)
print(st)
print(m)
print(i)
print(au)
print(j)
#setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
setwd(paste(directory,au,"/",st,"/",sa,"/",i,"_",m,collapse = NULL, sep=""))
par_front <- read.table(paste("Obtained_Pareto_Front_Run",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#par_set <- read.table(paste("Pareto_Set_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
#rmse <- read.table(paste("RMSE_Run_",j,".txt",collapse=NULL, sep=""), sep=",", header = F)
setwd(paste(directory,"True_Pareto_5000/",collapse = NULL,sep = ""))
true<-read.table(paste("True_5000_", i,"_",m,".txt",collapse = NULL, sep=""), sep=",", header = F)
#if(m==2)
# igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igd<-calcIGD(as.matrix(par_front), as.matrix(true))
#else
#  igd<-computeInvertedGenerationalDistance(as.matrix(t(par_front)), as.matrix(t(true)), p = 1, normalize = TRUE)
igdtemp=rbind(igdtemp,igd)
}
colnames(igdtemp)[1]<-paste(sa,"_",st,"_",i,"_",m,"_",au,collapse = NULL,sep = "")
igdall=cbind(igdall,igdtemp)
}
}
}
}
#igdall<- NULL
}
dx<-stack(as.data.frame(igdall))
names(dx)[names(dx)=="ind"]<-"comparison"
#dx <- dx[order(dx$comparison),]
ggplot(dx, aes(y=values,x=comparison))+
#ylim(-1,0.4)+
geom_boxplot(aes(group=comparison, colour=comparison, fill=comparison), alpha=0.5)+
#theme(legend.position="top") +
labs(title="Box-Plot of IGD for DDO for differenet sampling methods on DTLZ test problems (2 & 3 objectives)" ,x="Sampling_Strategy_Problem_Objectives_Author(TC=Tinkle, AM=Atanu)",y="IGD" )+
stat_summary(fun.y=mean, colour="red", geom="point",
shape=18, size=2) +
#theme(legend.position="top",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
